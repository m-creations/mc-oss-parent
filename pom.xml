<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.m-creations</groupId>
	<artifactId>mc-oss-parent</artifactId>
	<version>1.1.11</version>
	<packaging>pom</packaging>

	<name>Parent POM for m-creations OSS projects</name>

	<url>https://github.com/m-creations/mc-oss-parent</url>

	<description>The base POM for m-creations' open source Java projects</description>

	<inceptionYear>2016</inceptionYear>
	<contributors>
		<contributor>
			<name>Kambiz Darabi</name>
		</contributor>
	</contributors>
	<licenses>
		<license>
			<name>Apache License v 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Kambiz Darabi</name>
			<email>darabi@m-creations.com</email>
			<organization>m-creations gmbh</organization>
			<organizationUrl>http://www.m-creations.com</organizationUrl>
		</developer>
	</developers>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh-releases</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<issueManagement>
		<url>https://github.com/m-creations/${project.artifactId}/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Java 1.7 is EOL since long -->
		<compiler.sourceLevel>1.8</compiler.sourceLevel>
		<compiler.targetLevel>1.8</compiler.targetLevel>

		<!-- the path to this project relative to scm.connection/scm.devConnection properties -->
		<scm.path>${project.artifactId}</scm.path>

		<!-- These properties are used in child projects as base URLs to reduce configuration -->
		<scm.connection>scm:git:git@github.com:m-creations</scm.connection>
		<scm.devConnection>scm:git:git@github.com:m-creations</scm.devConnection>
		<scm.url>https://github.com/m-creations</scm.url>

		<version.log4j>2.7</version.log4j>
		<version.junit>4.12</version.junit>

		<version.jackson>2.4.2</version.jackson>
		<version.powermock>1.5.2</version.powermock>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

	</properties>

	<scm>
		<connection>${scm.connection}/${scm.path}</connection>
		<developerConnection>${scm.devConnection}/${scm.path}</developerConnection>
		<url>${scm.url}/${scm.path}</url>
	  <tag>release-1.1.11</tag>
  </scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${version.jackson}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${version.jackson}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${version.jackson}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.3.159</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<scope>runtime</scope>
				<version>1.2.2</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.1</version>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.5.4</version>
			</dependency>
			<dependency>
				<groupId>edu.stanford.nlp</groupId>
				<artifactId>stanford-parser</artifactId>
				<version>2.0.2</version>
			</dependency>
			<dependency>
				<groupId>hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>1.8.0.7</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${version.mysql}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3.4</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.6.6</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.6.6</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>2.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>2.3.15</version>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>1.7.2</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-classloading-xstream</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4-rule</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-test-mockito-junit4</artifactId>
				<version>${version.powermock}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.skyscreamer</groupId>
				<artifactId>jsonassert</artifactId>
				<version>1.2.1</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<!-- Include any java files in src/test/java directory -->
						<includes>
							<include>**/*.java</include>
						</includes>
						<!-- Excludes integration tests when unit tests are run. -->
						<excludes>
							<exclude>**/integration/**</exclude>
							<exclude>**/*IntegrationTest.java</exclude>
						</excludes>
						<useFile>true</useFile>
						<printSummary>true</printSummary>
						<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						<systemPropertyVariables>
							<prime.env>junit</prime.env>
							<prime.logdir>${project.build.directory}/log</prime.logdir>
							<prime.confdir>${basedir}/src/main/resources</prime.confdir>
						</systemPropertyVariables>
						<argLine>-Dfile.encoding=UTF-8</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.16</version>
					<configuration>
						<showSuccess>false</showSuccess>
					</configuration>
					<executions>
						<execution>
							<phase>test</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<tagNameFormat>release-@{project.version}</tagNameFormat>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!-- do not use the built-in release profile, as nexus-staging plugin will take care of the staging release with our profile 'release-to-central' -->
						<useReleaseProfile>false</useReleaseProfile>
						<releaseProfiles>release-to-central</releaseProfiles>
						<goals>deploy nexus-staging:release</goals>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>false</addClasspath>
							</manifest>
							<manifestEntries>
								<Build-Time>${maven.build.timestamp}</Build-Time>
								<Build-Host>${agent.name}</Build-Host>
								<Build-User>${user.name}</Build-User>
								<Build-Maven>Maven ${maven.version}</Build-Maven>
								<Build-Java>${java.version}</Build-Java>
								<Build-OS>${os.name}</Build-OS>
								<Build-Label>${project.version}</Build-Label>
							</manifestEntries>
						</archive>
						<packagingExcludes>
							WEB-INF/lib/isis-core-webserver*.jar,
							WEB-INF/lib/javax.servlet-api-*.jar,
							WEB-INF/lib/javax.websocket-api-*.jar,
							WEB-INF/lib/jetty-all-*.jar
						</packagingExcludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.3.2.v20150730</version>
				</plugin>
				<!-- http://simplericity.com/2009/11/10/1257880778509.html -->
				<plugin>
					<groupId>org.simplericity.jettyconsole</groupId>
					<artifactId>jetty-console-maven-plugin</artifactId>
					<version>1.58</version>
					<executions>
						<execution>
							<goals>
								<goal>createconsole</goal>
							</goals>
							<configuration>
								<backgroundImage>${basedir}/src/main/jettyconsole/isis-banner.png</backgroundImage>
								<destinationFile>${project.build.directory}/${project.build.finalName}-jetty-console.jar</destinationFile>
							</configuration>
							<phase>package</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.12</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>maven-version</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<version>1.9</version>
				</plugin>
				<plugin>
					<groupId>com.googlecode.flyway</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>2.3.1</version>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>${version.mysql}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.3</version>
					<executions>
						<execution>
							<phase>validate</phase>
							<goals>
								<goal>create</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<doCheck>false</doCheck>
						<doUpdate>false</doUpdate>
						<shortRevisionLength>5</shortRevisionLength>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
							<configuration>
								<additionalparam>-Xdoclint:none</additionalparam>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!--
						This plugin allows staging of artifacts in a Nexus PROFESSIONAL (not open source!) instance, which is the case for Sonatype OSS infrastructure. So,
						this will only be used when deploying for Maven Central
				-->
				
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.7</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<stagingProfileId>5e9e8e6f8d20a3</stagingProfileId>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
				
				<plugin>
					<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>maven-version</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				
			</plugins>
			
		</pluginManagement>
	</build>
	
	<profiles>
		
		<!-- Do not lint the Javadoc starting with JDK 8, as it leads to errors with current code -->
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
		
		<!-- Use -Prelease-to-central to sign and release to Maven Central repository -->
		<profile>
			<id>release-to-central</id>
			<activation>
				<property>
					<name>gpg.keyid</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<keyname>${gpg.keyid}</keyname>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.4</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
	
</project>

